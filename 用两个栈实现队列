//用两个栈实现队列，分别完成在队列尾部插入节点和在队列头部删除节点。
#define _CRT_SECURE_NO_WARNINGS 1
#include<stack>
#include<iostream>
using namespace std;
template<class T>
class CQueue
{
public:
	CQueue()
	{}
	~CQueue()
	{}
	void appendTail(const T& node)//在队列尾部插入节点
	{
		stack1.push(node);
	}
	T deleteHead()//在队列头部删除节点
	{
		if (stack2.size()<=0)  //栈2为空时把栈1的元素依次弹出并压入栈2
		{
			while (stack1.size()>0)
			{
				T data = stack1.top();
				stack1.pop();
				stack2.push(data);
			}
		}
		if (stack2.size() == 0)//栈2的元素全部弹出
		{
			cout << "队列为空";
		}
		T Head = stack2.top();//栈2不为空时依次弹出栈顶元素
		stack2.pop();
		return Head;
	}
private:
	stack<T> stack1;
	stack<T> stack2;
};
int main()
{
	CQueue<int> s;
	s.appendTail(1);
	s.appendTail(2);
	s.appendTail(3);
	s.appendTail(4);
	cout <<s.deleteHead()<<endl;
	cout <<s.deleteHead();
	getchar();
	return 0;
}
