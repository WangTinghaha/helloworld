//实现Singleton模式（设计一个类，只能生成该类的一个实例）
//一是单例模式的类只提供私有的构造函数，二是类定义中含有一个该类的
//静态私有对象，三是该类提供了一个静态的公有的函数用于创建或获取它本身的静态私有对象。

class Singleton1
{
private:
	Singleton1()
	{}
private:
	static Singleton1* pInstance;
public:
	static Singleton1* GetInstance()
	{
		if (pInstance == NULL)
		{
			pInstance = new Singleton1();
		}
		return pInstance;
	}
};
