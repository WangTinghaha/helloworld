//输入一个矩阵，按照从外向里以顺时针的顺序依此打印出每一个数字。
#define _CRT_SECURE_NO_WARNINGS 1
#include<iostream>
using namespace std;
void PrintMatrixIncircle(int ** a, int rows, int columns, int start)//打印矩阵圈
{
	int endX = columns - 1 - start;
	int endY = rows - 1 - start;
	//从左到右打印一行
	for (int i = start; i <= endX; i++)
	{
		cout << a[start][i] << " ";
	}
	//从上到下打印一列
	if (endY > start)
	{
		for (int i = start + 1; i <= endY; i++)
		{
			cout << a[i][endX] << " ";
		}
	}
	//从右到左打印一行
	if (endY > start && endX > start)
	{
		for (int i = endX - 1; i >= start; i--)
		{
			cout << a[endY][i] << " ";
		}
	}
	//从下到上打印一列
	if (endY - 1 > start && endX > start)
	{
		for (int i = endY - 1; i >= start + 1; i--)
		{
			cout << a[i][start] << " ";
		}
	}
}
void PrintMatrixClockWisely(int** a, int rows, int columns)//顺时针打印矩阵，rows为行数，columns为列数
{
	if (a == NULL || rows <= 0 || columns <= 0)
		return;
	int start = 0;
	while (rows>(start * 2) && columns>(start * 2))
	{
		PrintMatrixIncircle(a, rows, columns, start);
		start++;
	}
}
int main()
{
	int a[4][4] = 
	{ 
		{ 1, 2, 3, 4 },
		{ 5, 6, 7, 8 }, 
		{ 9, 10, 11, 12 }, 
		{ 13, 14, 15, 16 }
	};
	int **p = new int* [4];
	for (int i = 0; i<4; i++)
	{
		p[i] = a[i];
	}
	PrintMatrixClockWisely(p, 4, 4);
	cout << endl;
	getchar();
	return 0;
}

