//输入一个整型数组，数组里有正数也有负数。数组中一个或连续的多个整数组成一个子数组。求所有子数组的和的最大值。
#define _CRT_SECURE_NO_WARNINGS 1
#include<iostream>
using namespace std;
int FindGreatestSumOfSubArray(int* a,int size)
{
	if (a == NULL || size <= 0)
		return 0;
	int CurSum = 0;
	int GreatestSum = 0x80000000;
	for (int i = 0; i < size;++i)
	{
		if (CurSum <= 0)
			CurSum = a[i];
		else
			CurSum += a[i];
		if (CurSum>GreatestSum)
			GreatestSum = CurSum;
	}
	return GreatestSum;
}
int main()
{
	int a[] = {1,-2,3,10,-4,7,2,-5};
	int size = sizeof(a) / sizeof(a[0]);
	cout<<FindGreatestSumOfSubArray(a,size);
	getchar();
	return 0;
}
